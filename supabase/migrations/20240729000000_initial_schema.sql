-- Create the job_applications table
CREATE TABLE public.job_applications (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  company TEXT NOT NULL,
  role TEXT NOT NULL,
  date TIMESTAMP WITH TIME ZONE NOT NULL,
  status TEXT CHECK (status IN ('Applied', 'Interviewing', 'Offer', 'Rejected')) NOT NULL,
  notes TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Enable Row-Level Security (RLS) for the job_applications table
ALTER TABLE public.job_applications ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows users to see and manage only their own job applications
CREATE POLICY "Users can manage their own job applications"
ON public.job_applications
FOR ALL
TO authenticated
USING (auth.uid() = user_id)
WITH CHECK (auth.uid() = user_id);

-- Add comments to the columns for clarity
COMMENT ON COLUMN public.job_applications.id IS 'Unique identifier for each job application';
COMMENT ON COLUMN public.job_applications.user_id IS 'Foreign key to the user who owns this application';
COMMENT ON COLUMN public.job_applications.company IS 'Name of the company the application is for';
COMMENT ON COLUMN public.job_applications.role IS 'Job title or role applied for';
COMMENT ON COLUMN public.job_applications.date IS 'Date the application was submitted';
COMMENT ON COLUMN public.job_applications.status IS 'Current status of the application';
COMMENT ON COLUMN public.job_applications.notes IS 'User-provided notes for the application';
COMMENT ON COLUMN public.job_applications.created_at IS 'Timestamp of when the record was created';
